openapi: 3.0.0
info:
  title: HR Management API
  version: 1.0.0
paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /job-openings:
    get:
      summary: Get all job openings
      responses:
        '200':
          description: A list of job openings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobOpening'
    post:
      summary: Create a new job opening
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobOpening'
      responses:
        '201':
          description: Job opening created
  /job-openings/{id}:
    get:
      summary: Get a job opening by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single job opening
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOpening'
    put:
      summary: Update a job opening
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobOpening'
      responses:
        '200':
          description: Job opening updated
  /applications:
    post:
      summary: Apply for a job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobOpeningId:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Application submitted
  /onboarding-tasks:
    get:
      summary: Get all onboarding tasks for the current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of onboarding tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OnboardingTask'
  /performance-reviews:
    post:
      summary: Create a new performance review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceReview'
      responses:
        '201':
          description: Performance review created

components:
  schemas:
    JobOpening:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [OPEN, CLOSED, DRAFT]
    OnboardingTask:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED]
    PerformanceReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        employeeId:
          type: string
          format: uuid
        selfAssessment:
          type: string
        reviewerComments:
          type: string
        finalScore:
          type: integer
        status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT